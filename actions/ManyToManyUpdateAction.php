<?php

namespace app\actions;


use app\models\CompanyInfo;
use Yii;
use yii\base\Action;

class ManyToManyUpdateAction extends Action
{
    /**
     * Атррибут для модел метод ClassName; например modelClassName =>Model::className
     */
    public $modelClassName;
    /*
     * Аттрибут для динамического моделя
     */
    private $_model;
    /**
     * Аттрибут нужно для зашити что бы любая форма не выводилась в данный модель по этому надо вывести Class::formName();
     */
    public $formName;

    public function beforeRun()
    {

        parent::beforeRun(); // TODO: Change the autogenerated stub
        if ($this->Post() == null ){return false;}
        return true;
    }

    public function init()
    {
        $this->model = new $this->modelClassName();
    }

    /**
     * @return mixed данная функция главное для исползованые
     *
     */

    public function run(){
        $model = $this->model;
        $obj = $model::find()->where(['id'=>$this->Post()['id']])->one();

        if($obj->load(Yii::$app->request->post()) && $obj->save()){
            Yii::$app->session->setFlash('nmessage', t('Successfuly updated'));
        }

        return $this->referer;
    }

    /**
     * @return \yii\web\Response
     */
    public function getReferer() {
        return Yii::$app->controller->redirect(!empty(Yii::$app->request->referrer) ? Yii::$app->request->referrer : '/');
    }

    /**
     * @return mixed
     */
    public function getModel(){
        return $this->_model;
    }

    /**
     * @param $value
     * @return mixed
     */
    public function setModel($value){
        return $this->_model = $value;
    }
    public function getCompany(){
        return CompanyInfo::find()->user()->one();
    }
    public function Post(){
        return \Yii::$app->request->post($this->formName);
    }

}